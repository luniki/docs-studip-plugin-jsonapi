# Nutzer

Die Nutzer der Stud.IP-Installationen können mit den folgenden Routen
abgefragt werden.

## Schema

Alle Nutzer werden in Stud.IP mit diesem Schema abgebildet. Die `id`
entspricht der in Stud.IP verwendeten `user_id`. Der Typ ist `users`.

### Attribute

Attribut          | Beschreibung
--------          | ------------
username          | der Nutzername
formatted-name    | der formatierte Echtname des Nutzers
family-name       | der Nachname des Nutzers
given-name        | der Vorname des Nutzers
name-prefix       | evtl. vorangestellte Titel
name-suffix       | evtl. nachgestellte Titel
permission        | die globale Berechtigungsstufe
email             | die E-Mail-Adresse des Nutzers
phone             | die Telefonnummer des Nutzers
homepage          | die URL der Homepage des Nutzers
address           | die private Adresse des Nutzers

Die Berechtigungsstufe kann eine der folgenden sein: root, admin,
dozent, tutor, autor

Die Sichtbarkeit der Attribute "phone", "homepage", "address" folgt
den Sichtbarkeitseinstellungen, die der Nutzer vorgenommen hat.

### Relationen

<aside class="notice">
    Nicht alle Relationen sind für jeden Betrachter zugänglich.
</aside>

Relation              | Beschreibung
--------              | ------------
activitystream        | ein Link zum `activity stream` des Nutzers
blubber-postings      | die Blubber des Nutzers
contacts              | die Kontakte des Nutzers
courses               | die Veranstaltungen der Nutzers (als Dozent)
course-memberships    | die Veranstaltungen der Nutzers (als Teilnehmer)
events                | der Terminkalender des Nutzers
institute-memberships | die Institute der Nutzers
schedule              | der Stundenplan des Nutzers


## Alle Nutzer

<aside class="notice">
    Diese Route können aktuell nur Nutzer der Rechtestufe "root" verwenden. Andere
    Rechtestufen erhalten einen Fehler-Code 403.
</aside>

```shell
curl --request GET \
    --url https://example.com/users \
    --header "Authorization: Basic `echo -ne "root@studip:testing" | base64`" \
```

  > Der Request liefert JSON ähnlich wie dieses:

  <%= partial "includes/json/get_users" %>

Dieser Endpoint liefert alle Nutzer im Stud.IP, die der
JSON:API-Nutzer mit seinen `credentials` auch im Stud.IP selbst
sehen darf. Die Ausgabe erfolgt paginiert und kann durch Angabe von
Offset und Limit weitergeblättert werden.

### HTTP Request

`GET /users`

### Query-Parameter

Parameter    | Default | Beschreibung
---------    | ------- | ------------
page[offset] | 0       | der Offset
page[limit]  | 30      | das Limit

### Autorisierung

Diese Route kann nur von Nutzern der Rechtestufe "root" verwendet werden.



## Sich selbst auslesen

```shell
curl --request GET \
    --url https://example.com/users/me \
    --header "Authorization: Basic `echo -ne "test_dozent:testing" | base64`"
```

> Der Request liefert JSON ähnlich wie dieses:

<%= partial "includes/json/get_own_user" %>

Mit diesem Endpoint bekommt man denjenigen Stud.IP Nutzer, der
autorisiert auf diesen Endpoint zugreift – also sich selbst.

### HTTP Request

`GET /users/me`

### Query-Parameter

Es werden keine Query-Parameter unterstützt.

### Autorisierung

Diese Route kann von jedem autorisierten Nutzer verwendet werden.


## Einen Nutzer auslesen

```shell
curl --request GET \
    --url https://example.com/users/<ID> \
    --header "Authorization: Basic `echo -ne "test_dozent:testing" | base64`"
```

Diese Route liefert einen beliebigen Nutzer zurück. Unsichtbare Nutzer
können sich allerdings nur selbst sehen.

### HTTP Request

`GET /users/{id}`

### Query-Parameter

Es werden keine Query-Parameter unterstützt.

### Autorisierung

Man kann sich selbst sehen. "root" darf jeden Nutzer sehen. Gesperrte
und unsichtbare Nutzer sind ansonsten nicht sichtbar.


## Einen Nutzer löschen

```shell
curl --request DELETE \
    --url https://example.com/users/<ID> \
    --header "Authorization: Basic `echo -ne "test_dozent:testing" | base64`"
```

Diese Route löscht einen beliebigen Nutzer.

### HTTP Request

`DELETE /users/{id}`

### Query-Parameter

Es werden keine Query-Parameter unterstützt.

### Autorisierung

Diese Route ist nur aktiviert, wenn die Stud.IP-Konfiguration
"JSONAPI_DANGEROUS_ROUTES_ALLOWED" gesetzt ist.

Ist das der Fall, dürfen Nutzer der Rechtestufe "root" andere Nutzer
löschen. Man kann sich selbst **nicht** löschen.


## GET /users/{id}/institute-memberships

```shell
curl --request GET \
    --url https://example.com/users/<ID>/institute-memberships \
    --header "Authorization: Basic `echo -ne "test_dozent:testing" | base64`"
```

Mit dieser Route erhält man die Mitgliedschaften in Einrichtungen eines Nutzers.

### HTTP Request

`GET http://example.com/api/users/{id}/institute-memberships`

### Query-Parameter

Es werden keine Query-Parameter unterstützt.

### Autorisierung

Ein Nutzer kann nur die eigenen Mitgliedschaften in Einrichtungen einsehen.
