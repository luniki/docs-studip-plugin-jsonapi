# Ankündigungen

TODO: Einleitung

## Schema "todo-a"

TODO: Einleitung

### Attribute

Attribut    | Beschreibung
--------    | ------------

### Relationen

 Relation | Beschreibung
--------  | ------------

## TODO: Routen beschreiben

        $this->app->post('/courses/{id}/news', Routes\News\CourseNewsCreate::class);
        $this->app->post('/users/{id}/news', Routes\News\UserNewsCreate::class);
        $this->app->post('/news', Routes\News\StudipNewsCreate::class);
        $this->app->post('/news/{id}/comments', Routes\News\CommentCreate::class);
        $this->app->patch('/news/{id}', Routes\News\NewsUpdate::class);
        $this->app->get('/news/{id}', Routes\News\NewsShow::class);
        $this->app->get('/courses/{id}/news', Routes\News\ByCourseIndex::class);
        $this->app->get('/users/{id}/news', Routes\News\ByUserIndex::class);
        $this->app->get('/news/{id}/comments', Routes\News\CommentsIndex::class);
        $this->app->get('/news', Routes\News\ByCurrentUser::class);
        $this->app->get('/studip/news', Routes\News\GlobalNewsShow::class);
        $this->app->delete('/news/{id}', Routes\News\NewsDelete::class);
        $this->app->delete('/comments/{id}', Routes\News\CommentsDelete::class);

        // RELATIONSHIP: 'ranges'
        $this->addRelationship('/news/{id}/relationships/ranges', Routes\News\Rel\Ranges::class);



## Alle Blubb einer Blibb

```shell
curl --request GET \
    --url https://example.com/api/courses/<COURSE-ID>/documents \
    --header "Authorization: Basic `echo -ne "test_autor:testing" | base64`"
```

```javascript
fetch('https://example.com/api/courses/<COURSE-ID>/documents', {
    method: 'GET',
    mode: 'cors',
    headers: new Headers({
        'Authorization': `Basic ${btoa('test_autor:testing')}`
    })
}).then(response => console.log(response))
```


> Der Request liefert JSON ähnlich wie dieses:

<%= partial "includes/json/get_documents_of_course" %>

Wenn der Dateibereich in einer Veranstaltung aktiviert ist, kann man
mit dieser Route **alle** Dokumente einer Veranstaltung abfragen.

### HTTP Request

`GET https://example.com/jsonapi/courses/{id}/documents`

### URL-Parameter

Parameter |  Beschreibung
--------- | -------
id        | die ID der Veranstaltung

### Authorisierung

Diese Route kann von allen Nutzern verwendet werden, die Zugriff auf
die entsprechende Veranstaltung oder Einrichtung haben.
