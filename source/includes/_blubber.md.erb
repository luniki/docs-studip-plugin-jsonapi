# Blubber

TODO: Einleitung

## Schema "todo-a"

TODO: Einleitung

### Attribute

Attribut    | Beschreibung
--------    | ------------

### Relationen

 Relation | Beschreibung
--------  | ------------


## Alle Blubber-Beiträge

```shell
curl --request GET \
    --url https://example.com/api/blubber-postings \
    --header "Authorization: Basic `echo -ne "test_autor:testing" | base64`"
```

```javascript
fetch('https://example.com/api/blubber-postings', {
    method: 'GET',
    mode: 'cors',
    headers: new Headers({
        'Authorization': `Basic ${btoa('test_autor:testing')}`
    })
}).then(response => console.log(response))
```

Es werden alle Blubber-Beiträge, die man im Stud.IP sehen könnte, angezeigt.

### HTTP Request

`GET https://example.com/jsonapi/blubber-postings`

### URL-Parameter

Parameter |  Beschreibung
--------- | -------
filter    | Filtermöglichkeit der anzuzeigenden Blubber-Beiträge
include   | abhängige Ressourcen, die auch zurückgeliefert werden ([JSON:API-Spezifikation](http://jsonapi.org/format/#fetching-includes))
page      | Einstellmöglichkeiten [zur Paginierung](#paginierung)

#### URL-Parameter 'filter'

Mit diesem URL-Parameter kann nach Typ und Datum der Aktivitäten
gefiltert werden. Möglich sind folgende Filter:

Filter          | Beschreibung
--------------- | ------------
filter[course]  | TODO
filter[user]    | TODO

#### URL-Parameter 'include'

Wert      | Beschreibung
--------- | ------------
author    | TODO
comments  | TODO
context   | TODO
mentions  | TODO
resharers | TODO

### Authorisierung

Diese Route kann von allen Nutzern verwendet werden.


## Einen Blubber-Beitrag auslesen
   GET /blubber-postings/{id}

## Einen Blubber-Beitrag anlegen
   POST /blubber-postings

## Einen Blubber-Beitrag editieren
   PATCH /blubber-postings/{id}

## Einen Blubber-Beitrag löschen
   DELETE /blubber-postings/{id}

## Relation 'author'
   GET /blubber-postings/{id}/relationships/author

## Alle Kommentare eines Blubber-Beitrags
   GET /blubber-postings/{id}/comments

## Einen Blubber-Beitrag kommentieren
   POST /blubber-postings/{id}/comments

## Relation 'comments'
   GET /blubber-postings/{id}/relationships/comments

## Relation 'context'
   GET /blubber-postings/{id}/relationships/context

## Alle Erwähnungn eines Blubber-Beitrags
   GET /blubber-postings/{id}/mentions

## Relation 'mentions'
   GET /blubber-postings/{id}/relationships/mentions

## Relation 'resharers'
   GET /blubber-postings/{id}/relationships/resharers

## Einen Blubber-Beitrag in einer Veranstaltung anlegen
   POST /courses/{id}/blubber-postings

## Einen Blubber-Beitrag im Profil anlegen
   POST /users/{id}/blubber-postings

## Einen Blubber-Stream auslesen
   GET /blubber-streams/{id}
